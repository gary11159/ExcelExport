{"version":3,"sources":["public/error.mp3","components/print.js","components/A_mode.js","components/B_mode.js","components/C_mode.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExcelFile","ReactExport","ExcelSheet","Print","props","element","Button","variant","size","disabled","show","onClick","afterExport","style","cursor","filename","from","bigData","map","item","index","dataSet","name","toString","A_mode","React","useState","curData","setCurData","setBigData","smData","setSmData","msg","setMsg","windowType","setWindowType","setShow","boxNumber","setBoxNumber","dataA","setDataA","dataB","setDataB","inputBox","useRef","inputA","inputB","handlerInput","event","key","preventDefault","length","current","focus","playAudio","pre","undefined","value","document","getElementById","play","handleFocus","type","target","select","cleanAllInput","useEffect","curTab","Container","Row","Col","sm","InputGroup","className","Prepend","Text","FormControl","onChange","e","ref","onFocus","aria-describedby","onKeyPress","placeholder","maxLength","replaceAll","marginBottom","columns","title","width","wpx","data","text","onConfirm","B_mode","C_mode","fontRef","arr","Home","setKey","id","src","ErrorSound","Tabs","onSelect","k","Tab","eventKey","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7943ee96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.b70ddfd8.mp3\";","import React from \"react\";\r\nimport ReactExport from 'react-data-export';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n\r\nfunction Print(props) {\r\n    return (\r\n        <>\r\n            <ExcelFile \r\n                element={<Button variant=\"warning\" size=\"lg\" disabled={!props.show} onClick={() => props.afterExport()} style={!props.show ? { cursor: 'not-allowed' } : null}>輸出Excel</Button>}\r\n                filename={props.from === 'A' ? \"A模式\" : props.from === 'B' ? \"B模式\" : \"C模式\"}\r\n            >\r\n                {props.bigData.map((item, index) => {\r\n                    return (\r\n                        <ExcelSheet dataSet={[item]} name={(index + 1).toString()} />\r\n                    )\r\n                })}\r\n            </ExcelFile>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Print","import React, { Fragment } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Print from './print';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nfunction A_mode(props) {\r\n    const [curData, setCurData] = React.useState('Box');\r\n    const [bigData, setBigData] = React.useState([]);  // 最後得大資料\r\n    const [smData, setSmData] = React.useState();    // 每一箱號的資料(暫存)\r\n    const [msg, setMsg] = React.useState(); // 視窗訊息\r\n    const [windowType, setWindowType] = React.useState('info');  // 視窗類型\r\n    const [show, setShow] = React.useState(false);\r\n    const [boxNumber, setBoxNumber] = React.useState();\r\n    const [dataA, setDataA] = React.useState();\r\n    const [dataB, setDataB] = React.useState();\r\n    const inputBox = React.useRef();\r\n    const inputA = React.useRef();\r\n    const inputB = React.useRef();\r\n\r\n    function handlerInput(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            validation();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if ( props.curTab === 'a_mode' ) {\r\n            if ( curData === 'Box' ) \r\n                inputBox.current.focus();\r\n            else if ( curData === 'A' ) \r\n                inputA.current.focus();\r\n            else if ( curData === 'B' ) \r\n                inputB.current.focus();\r\n        }\r\n    }, [props.curTab]);\r\n\r\n    function playAudio() {\r\n        let x = document.getElementById(\"myAudio\");\r\n        x.play()\r\n    }\r\n\r\n    // 儲存編號到箱號陣列\r\n    function saveData() {\r\n        if (smData !== undefined) {\r\n            setSmData(pre => [...pre, [{ value: boxNumber }, { value: dataA }, { value: dataB }]]);\r\n        } else {\r\n            setSmData([[{ value: boxNumber }, { value: dataA }, { value: dataB }]]);\r\n        }\r\n\r\n    }\r\n\r\n    // 驗證掃描資料\r\n    function validation() {\r\n        // 做驗證\r\n        if (curData === 'A') {\r\n            if (dataA.length === 13) {\r\n                inputB.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => '一維條碼格式有問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputA.current.focus();\r\n            }\r\n        } else if (curData === 'B') {\r\n            if (dataB.length === 10) {\r\n                saveData();\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => 'QR CODE格式有問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputB.current.focus();\r\n            }\r\n        } else if (curData === 'Box') {\r\n            if (boxNumber.length === 11) {\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => '外箱條碼格式有問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputBox.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 點擊input全選\r\n    function handleFocus(event, type) {\r\n        setCurData(pre => type);\r\n        event.target.select();\r\n    }\r\n\r\n    // 儲存到最終資料\r\n    function saveBigData() {\r\n        if (boxNumber === undefined || boxNumber === '' || boxNumber === null) {\r\n            setMsg(pre => '請輸入箱號！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        } else if (smData === undefined || smData === '') {\r\n            setMsg(pre => '請先新增資料！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        }\r\n        else {\r\n            setBigData([...bigData, { \r\n                columns: [\r\n                    { title: \"箱號\", width: {wpx: 100}},\r\n                    { title: \"一維條碼\", width: {wpx: 120} }, // width in pixels\r\n                    { title: \"條碼(QR CODE)\", width: {wpx: 120} }, // width in pixels\r\n                  ],\r\n                  data: smData\r\n                  ,\r\n            }]);\r\n\r\n            cleanAllInput();\r\n            setMsg(pre => '新增箱號成功！');\r\n            setWindowType(pre => 'success');\r\n            setShow(true); // 跳出alert\r\n        }\r\n\r\n    }\r\n\r\n    // 清空所有輸入\r\n    function cleanAllInput() {\r\n        setBoxNumber('');\r\n        setSmData();\r\n        setDataA('');\r\n        setDataB('');\r\n        inputBox.current.focus();\r\n    }\r\n\r\n    // 輸出完檔案\r\n    function afterExport() {\r\n        setBigData(pre => []);\r\n        cleanAllInput();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4} >\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>外箱</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={boxNumber} onChange={(e) => setBoxNumber(e.target.value)} ref={inputBox}\r\n                                onFocus={(e) => handleFocus(e, 'Box')} aria-describedby=\"basic-addon1\" onKeyPress={handlerInput} placeholder=\"請掃描外箱條碼\" maxLength=\"20\" />\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>掃描資料</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={dataA} onChange={(e) => setDataA(e.target.value)} ref={inputA} onFocus={(e) => handleFocus(e, 'A')} placeholder=\"請掃描一維條碼\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                            <FormControl value={dataB} onChange={(e) => setDataB(e.target.value.replaceAll('http://sunon.bz/?', ''))} ref={inputB} onFocus={(e) => handleFocus(e, 'B')} placeholder=\"請掃描QR Code\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8} style={{ marginBottom: '16px' }}>\r\n                        當前箱號有{smData !== undefined ? smData.length : 0}筆資料，{bigData !== undefined ? bigData.length : 0}筆箱號\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <Button variant=\"info\" size=\"lg\" onClick={() => saveBigData()}>儲存當前箱號</Button>\r\n                        {' '}\r\n                        <Print\r\n                            from=\"A\"\r\n                            bigData={bigData}\r\n                            show={bigData.length > 0 ? true : false}\r\n                            afterExport={() => afterExport()} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"訊息\"\r\n                type={windowType}\r\n                text={msg}\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default A_mode","import React, { Fragment } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Print from './print';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nfunction B_mode(props) {\r\n    const [curData, setCurData] = React.useState('A');\r\n    const [bigData, setBigData] = React.useState([]);  // 最後得大資料\r\n    const [smData, setSmData] = React.useState();    // 每一箱號的資料(暫存)\r\n    const [msg, setMsg] = React.useState(); // 視窗訊息\r\n    const [windowType, setWindowType] = React.useState('info');  // 視窗類型\r\n    const [show, setShow] = React.useState(false);\r\n    const [dataA, setDataA] = React.useState();\r\n    const [dataB, setDataB] = React.useState();\r\n    const inputA = React.useRef();\r\n    const inputB = React.useRef();\r\n\r\n    function handlerInput(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            validation();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.curTab === 'b_mode') {\r\n            if (curData === 'A')\r\n                inputA.current.focus();\r\n            else if (curData === 'B')\r\n                inputB.current.focus();\r\n        }\r\n    }, [props.curTab]);\r\n\r\n    function playAudio() {\r\n        let x = document.getElementById(\"myAudio\");\r\n        x.play()\r\n    }\r\n\r\n    // 儲存編號到箱號陣列\r\n    function saveData() {\r\n        if (smData !== undefined) {\r\n            setSmData(pre => [...pre, [{ value: dataA }, { value: dataB }]]);\r\n        } else {\r\n            setSmData([[{ value: dataA }, { value: dataB }]]);\r\n        }\r\n    }\r\n\r\n    // 驗證掃描資料\r\n    function validation() {\r\n        // 做驗證\r\n        if (curData === 'A') {\r\n            if (dataA.length === 13) {\r\n                inputB.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => '一維條碼格式出問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputA.current.focus();\r\n            }\r\n        } else if (curData === 'B') {\r\n            if (dataB.length === 10) {\r\n                saveData();\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => 'QR CODE格式出問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputB.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 點擊input全選\r\n    function handleFocus(event, type) {\r\n        setCurData(pre => type);\r\n        event.target.select();\r\n    }\r\n\r\n    // 儲存到最終資料\r\n    function saveBigData() {\r\n        if (smData === undefined || smData === '') {\r\n            setMsg(pre => '請先新增資料！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        }\r\n        else {\r\n            setBigData([...bigData, { \r\n                columns: [\r\n                    { title: \"一維條碼\", width: {wpx: 120} }, // width in pixels\r\n                    { title: \"條碼(QR CODE)\", width: {wpx: 120} }, // width in pixels\r\n                  ],\r\n                  data: smData\r\n                  ,\r\n            }]);\r\n            cleanAllInput();\r\n            setMsg(pre => '新增箱號成功！');\r\n            setWindowType(pre => 'success');\r\n            setShow(true); // 跳出alert\r\n        }\r\n\r\n    }\r\n\r\n    // 清空所有輸入\r\n    function cleanAllInput() {\r\n        setSmData();\r\n        setDataA('');\r\n        setDataB('');\r\n        inputA.current.focus();\r\n    }\r\n\r\n    // 輸出完檔案\r\n    function afterExport() {\r\n        setBigData(pre => []);\r\n        cleanAllInput();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>掃描資料</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={dataA} onChange={(e) => setDataA(e.target.value)} ref={inputA} onFocus={(e) => handleFocus(e, 'A')} placeholder=\"請掃描一維條碼\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                            <FormControl value={dataB} onChange={(e) => setDataB(e.target.value.replaceAll('http://sunon.bz/?', ''))} ref={inputB} onFocus={(e) => handleFocus(e, 'B')} placeholder=\"請掃描QR CODE\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8} style={{ marginBottom: '16px' }}>\r\n                        當前分頁有{smData !== undefined ? smData.length : 0}筆資料，{bigData !== undefined ? bigData.length : 0}筆分頁\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <Button variant=\"info\" size=\"lg\" onClick={() => saveBigData()}>儲存當前分頁</Button>\r\n                        {' '}\r\n                        <Print\r\n                            from=\"B\"\r\n                            bigData={bigData}\r\n                            show={bigData.length > 0 ? true : false}\r\n                            afterExport={() => afterExport()} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"訊息\"\r\n                type={windowType}\r\n                text={msg}\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default B_mode","import React, { Fragment } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Print from './print';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nfunction C_mode(props) {\r\n    const [bigData, setBigData] = React.useState([]);  // 最後得大資料\r\n    const [smData, setSmData] = React.useState();    // 每一箱號的資料(暫存)\r\n    const [msg, setMsg] = React.useState(); // 視窗訊息\r\n    const [windowType, setWindowType] = React.useState('info');  // 視窗類型\r\n    const [show, setShow] = React.useState(false);\r\n    const [boxNumber, setBoxNumber] = React.useState();\r\n    const inputBox = React.useRef();\r\n    const fontRef = React.useRef();\r\n\r\n    function handlerInput(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            validation();\r\n            fontRef.current.focus();\r\n            inputBox.current.focus();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (props.curTab === 'c_mode') {\r\n            inputBox.current.focus();\r\n        }\r\n    }, [props.curTab]);\r\n\r\n    function playAudio() {\r\n        let x = document.getElementById(\"myAudio\");\r\n        x.play()\r\n    }\r\n\r\n    // 儲存編號到箱號陣列\r\n    function saveData() {\r\n        if (smData !== undefined) {\r\n            setSmData(pre => [...pre, {value: boxNumber}]);\r\n        } else {\r\n            setSmData([{value: boxNumber}]);\r\n        }\r\n    }\r\n\r\n    // 驗證掃描資料\r\n    function validation() {\r\n        // 做驗證\r\n        if (boxNumber.length !== 11) {\r\n            playAudio();\r\n            setMsg(pre => '外箱條碼格式出問題！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n            inputBox.current.focus();\r\n        } else {\r\n            saveData();\r\n        }\r\n    }\r\n\r\n    // 點擊input全選\r\n    function handleFocus(event, type) {\r\n        event.target.select();\r\n    }\r\n\r\n    // 儲存到最終資料\r\n    function saveBigData() {\r\n        if (boxNumber === undefined || boxNumber === '' || boxNumber === null) {\r\n            setMsg(pre => '請輸入箱號！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        } else if (smData === undefined || smData === '') {\r\n            setMsg(pre => '請先新增資料！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        }\r\n        else {\r\n            setBigData([...bigData, { \r\n                columns: [\r\n                    { title: \"箱號\", width: {wpx: 120} }, // width in pixels\r\n                  ],\r\n                  data: \r\n                    smData.map((arr) =>{\r\n                        return [arr];\r\n                    })\r\n                  ,\r\n            }]);\r\n            cleanAllInput();\r\n            setMsg(pre => '新增箱號成功！');\r\n            setWindowType(pre => 'success');\r\n            setShow(true); // 跳出alert\r\n        }\r\n\r\n    }\r\n\r\n    // 清空所有輸入\r\n    function cleanAllInput() {\r\n        setBoxNumber('');\r\n        setSmData();\r\n        inputBox.current.focus();\r\n    }\r\n\r\n    // 輸出完檔案\r\n    function afterExport() {\r\n        setBigData(pre => []);\r\n        cleanAllInput();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4} >\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>外箱</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={boxNumber} onChange={(e) => setBoxNumber(e.target.value)} ref={inputBox}\r\n                                onFocus={(e) => handleFocus(e, 'Box')} aria-describedby=\"basic-addon1\" onKeyPress={handlerInput} placeholder=\"請掃描外箱條碼\" maxLength=\"20\" />\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8} style={{ marginBottom: '16px' }}>\r\n                        當前箱號有{smData !== undefined ? smData.length : 0}筆資料，{bigData !== undefined ? bigData.length : 0}筆箱號\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <Button variant=\"info\" size=\"lg\" onClick={() => saveBigData()} ref={fontRef}>儲存當前箱號</Button>\r\n                        {' '}\r\n                        <Print\r\n                            from=\"C\"\r\n                            bigData={bigData}\r\n                            show={bigData.length > 0 ? true : false}\r\n                            afterExport={() => afterExport()} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"訊息\"\r\n                type={windowType}\r\n                text={msg}\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default C_mode","import React, { Fragment } from 'react';\r\nimport ErrorSound from '../public/error.mp3';\r\nimport A_mode from './A_mode';\r\nimport B_mode from './B_mode';\r\nimport C_mode from './C_mode';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Home() {\r\n    const [key, setKey] = React.useState('a_mode');\r\n\r\n    return (\r\n        <Fragment>\r\n            <audio id=\"myAudio\">\r\n                <source src={ErrorSound} type=\"audio/mpeg\" />\r\n                Your browser does not support the audio element.\r\n            </audio>\r\n            <Container>\r\n                <Tabs className=\"homeTab\" onSelect={(k) => setKey(k)}>\r\n                    <Tab eventKey=\"a_mode\" title=\"A模式\">\r\n                        <A_mode curTab={key}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"b_mode\" title=\"B模式\">\r\n                        <B_mode curTab={key}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"c_mode\" title=\"C模式\">\r\n                        <C_mode curTab={key}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/home';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Home/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}