{"version":3,"sources":["public/error.mp3","components/print.js","components/A_mode.js","components/B_mode.js","components/C_mode.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Print","props","from","filename","element","Button","variant","size","disabled","show","onClick","afterExport","style","cursor","undefined","bigData","map","item","data","Object","values","name","keys","key","label","value","A_mode","React","useState","curData","setCurData","setBigData","smData","setSmData","msg","setMsg","windowType","setWindowType","setShow","boxNumber","setBoxNumber","dataA","setDataA","dataB","setDataB","inputBox","useRef","inputA","inputB","handlerInput","event","preventDefault","length","current","focus","playAudio","pre","document","getElementById","play","handleFocus","type","target","select","cleanAllInput","useEffect","curTab","Container","Row","Col","sm","InputGroup","className","Prepend","Text","FormControl","onChange","e","ref","onFocus","aria-describedby","onKeyPress","placeholder","maxLength","marginBottom","title","text","onConfirm","B_mode","num","setNum","C_mode","fontRef","Home","setKey","id","src","ErrorSound","Tabs","onSelect","k","Tab","eventKey","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9dc1827e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.b70ddfd8.mp3\";","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nfunction Print(props) {\r\n    return (\r\n        <>\r\n            {props.from !== 'C' ?\r\n                <ExcelFile filename={props.from === 'A' ? \"A模式\" : \"B模式\"} element={<Button variant=\"warning\" size=\"lg\" disabled={!props.show} onClick={() => props.afterExport()} style={!props.show ? { cursor: 'not-allowed' } : null}>輸出Excel</Button>}>\r\n                    {props.bigData !== undefined && props.bigData.map((item) => {\r\n                        return (\r\n                            <ExcelSheet data={Object.values(item)[0]} name={Object.keys(item)} key={Object.keys(item)}>\r\n                                <ExcelColumn label=\"一維條碼\" value=\"一維條碼\" />\r\n                                <ExcelColumn label=\"條碼(QR CODE)\" value=\"條碼(QR CODE)\" />\r\n                            </ExcelSheet>\r\n                        )\r\n                    })}\r\n                </ExcelFile> :\r\n                <ExcelFile filename=\"C模式\" element={<Button variant=\"warning\" size=\"lg\" disabled={!props.show} onClick={() => props.afterExport()} style={!props.show ? { cursor: 'not-allowed' } : null}>輸出Excel</Button>}>\r\n                    {props.bigData !== undefined && props.bigData.map((item) => {\r\n                        return (\r\n                            <ExcelSheet data={Object.values(item)[0]} name={Object.keys(item)} key={Object.keys(item)}>\r\n                                <ExcelColumn label=\"外箱條碼\" value=\"外箱條碼\" />\r\n                            </ExcelSheet>\r\n                        )\r\n                    })}\r\n                </ExcelFile>\r\n            }\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Print","import React, { Fragment } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Print from './print';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nfunction A_mode(props) {\r\n    const [curData, setCurData] = React.useState('Box');\r\n    const [bigData, setBigData] = React.useState([]);  // 最後得大資料\r\n    const [smData, setSmData] = React.useState();    // 每一箱號的資料(暫存)\r\n    const [msg, setMsg] = React.useState(); // 視窗訊息\r\n    const [windowType, setWindowType] = React.useState('info');  // 視窗類型\r\n    const [show, setShow] = React.useState(false);\r\n    const [boxNumber, setBoxNumber] = React.useState();\r\n    const [dataA, setDataA] = React.useState();\r\n    const [dataB, setDataB] = React.useState();\r\n    const inputBox = React.useRef();\r\n    const inputA = React.useRef();\r\n    const inputB = React.useRef();\r\n\r\n    function handlerInput(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            validation();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if ( props.curTab === 'a_mode' ) {\r\n            if ( curData === 'Box' ) \r\n                inputBox.current.focus();\r\n            else if ( curData === 'A' ) \r\n                inputA.current.focus();\r\n            else if ( curData === 'B' ) \r\n                inputB.current.focus();\r\n        }\r\n    }, [props.curTab]);\r\n\r\n    function playAudio() {\r\n        let x = document.getElementById(\"myAudio\");\r\n        x.play()\r\n    }\r\n\r\n    // 儲存編號到箱號陣列\r\n    function saveData() {\r\n        if (smData !== undefined) {\r\n            setSmData(pre => [...pre, { '一維條碼': dataA, '條碼(QR CODE)': dataB }]);\r\n        } else {\r\n            setSmData([{ '一維條碼': dataA, '條碼(QR CODE)': dataB }]);\r\n        }\r\n\r\n    }\r\n\r\n    // 驗證掃描資料\r\n    function validation() {\r\n        // 做驗證\r\n        if (curData === 'A') {\r\n            if (dataA.length === 13) {\r\n                inputB.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => '一維條碼格式有問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputA.current.focus();\r\n            }\r\n        } else if (curData === 'B') {\r\n            if (dataB.length === 10) {\r\n                saveData();\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => 'QR CODE格式有問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputB.current.focus();\r\n            }\r\n        } else if (curData === 'Box') {\r\n            if (boxNumber.length === 11) {\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => '外箱條碼格式有問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputBox.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 點擊input全選\r\n    function handleFocus(event, type) {\r\n        setCurData(pre => type);\r\n        event.target.select();\r\n    }\r\n\r\n    // 儲存到最終資料\r\n    function saveBigData() {\r\n        if (boxNumber === undefined || boxNumber === '' || boxNumber === null) {\r\n            setMsg(pre => '請輸入箱號！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        } else if (smData === undefined || smData === '') {\r\n            setMsg(pre => '請先新增資料！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        }\r\n        else {\r\n            setBigData([...bigData, { [boxNumber]: smData }]);\r\n            cleanAllInput();\r\n            setMsg(pre => '新增箱號成功！');\r\n            setWindowType(pre => 'success');\r\n            setShow(true); // 跳出alert\r\n        }\r\n\r\n    }\r\n\r\n    // 清空所有輸入\r\n    function cleanAllInput() {\r\n        setBoxNumber('');\r\n        setSmData();\r\n        setDataA('');\r\n        setDataB('');\r\n        inputBox.current.focus();\r\n    }\r\n\r\n    // 輸出完檔案\r\n    function afterExport() {\r\n        setBigData(pre => []);\r\n        cleanAllInput();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4} >\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>外箱</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={boxNumber} onChange={(e) => setBoxNumber(e.target.value)} ref={inputBox}\r\n                                onFocus={(e) => handleFocus(e, 'Box')} aria-describedby=\"basic-addon1\" onKeyPress={handlerInput} placeholder=\"請掃描外箱條碼\" maxLength=\"20\" />\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>掃描資料</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={dataA} onChange={(e) => setDataA(e.target.value)} ref={inputA} onFocus={(e) => handleFocus(e, 'A')} placeholder=\"請掃描一維條碼\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                            <FormControl value={dataB} onChange={(e) => setDataB(e.target.value)} ref={inputB} onFocus={(e) => handleFocus(e, 'B')} placeholder=\"請掃描QR Code\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8} style={{ marginBottom: '16px' }}>\r\n                        當前箱號有{smData !== undefined ? smData.length : 0}筆資料，{bigData !== undefined ? bigData.length : 0}筆箱號\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <Button variant=\"info\" size=\"lg\" onClick={() => saveBigData()}>儲存當前箱號</Button>\r\n                        {' '}\r\n                        <Print\r\n                            from=\"A\"\r\n                            bigData={bigData}\r\n                            show={bigData.length > 0 ? true : false}\r\n                            afterExport={() => afterExport()} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"訊息\"\r\n                type={windowType}\r\n                text={msg}\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default A_mode","import React, { Fragment } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Print from './print';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nfunction B_mode(props) {\r\n    const [curData, setCurData] = React.useState('A');\r\n    const [bigData, setBigData] = React.useState([]);  // 最後得大資料\r\n    const [smData, setSmData] = React.useState();    // 每一箱號的資料(暫存)\r\n    const [msg, setMsg] = React.useState(); // 視窗訊息\r\n    const [windowType, setWindowType] = React.useState('info');  // 視窗類型\r\n    const [show, setShow] = React.useState(false);\r\n    const [dataA, setDataA] = React.useState();\r\n    const [dataB, setDataB] = React.useState();\r\n    const [num, setNum] = React.useState(1);  // 幾頁分頁\r\n    const inputA = React.useRef();\r\n    const inputB = React.useRef();\r\n\r\n    function handlerInput(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            validation();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if ( props.curTab === 'b_mode' ) {\r\n            if ( curData === 'A' ) \r\n                inputA.current.focus();\r\n            else if ( curData === 'B' ) \r\n                inputB.current.focus();\r\n        }\r\n    }, [props.curTab]);\r\n\r\n    function playAudio() {\r\n        let x = document.getElementById(\"myAudio\");\r\n        x.play()\r\n    }\r\n\r\n    // 儲存編號到箱號陣列\r\n    function saveData() {\r\n        if (smData !== undefined) {\r\n            setSmData(pre => [...pre, { '一維條碼': dataA, '條碼(QR CODE)': dataB }]);\r\n        } else {\r\n            setSmData([{ '一維條碼': dataA, '條碼(QR CODE)': dataB }]);\r\n        }\r\n    }\r\n\r\n    // 驗證掃描資料\r\n    function validation() {\r\n        // 做驗證\r\n        if (curData === 'A') {\r\n            if (dataA.length === 13) {\r\n                inputB.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => '一維條碼格式出問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputA.current.focus();\r\n            }\r\n        } else if (curData === 'B') {\r\n            if (dataB.length === 10) {\r\n                saveData();\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => 'QR CODE格式出問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputB.current.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    // 點擊input全選\r\n    function handleFocus(event, type) {\r\n        setCurData(pre => type);\r\n        event.target.select();\r\n    }\r\n\r\n    // 儲存到最終資料\r\n    function saveBigData() {\r\n        if (smData === undefined || smData === '') {\r\n            setMsg(pre => '請先新增資料！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        }\r\n        else {\r\n            setBigData([...bigData, { [num]: smData }]);\r\n            setNum(num => num + 1);\r\n            cleanAllInput();\r\n            setMsg(pre => '新增箱號成功！');\r\n            setWindowType(pre => 'success');\r\n            setShow(true); // 跳出alert\r\n        }\r\n\r\n    }\r\n\r\n    // 清空所有輸入\r\n    function cleanAllInput() {\r\n        setSmData();\r\n        setDataA('');\r\n        setDataB('');\r\n        inputA.current.focus();\r\n    }\r\n\r\n    // 輸出完檔案\r\n    function afterExport() {\r\n        setBigData(pre => []);\r\n        setNum(1);\r\n        cleanAllInput();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>掃描資料</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={dataA} onChange={(e) => setDataA(e.target.value)} ref={inputA} onFocus={(e) => handleFocus(e, 'A')} placeholder=\"請掃描一維條碼\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                            <FormControl value={dataB} onChange={(e) => setDataB(e.target.value)} ref={inputB} onFocus={(e) => handleFocus(e, 'B')} placeholder=\"請掃描QR CODE\" onKeyPress={handlerInput} maxLength=\"20\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8} style={{ marginBottom: '16px' }}>\r\n                        當前箱號有{smData !== undefined ? smData.length : 0}筆資料，{bigData !== undefined ? bigData.length : 0}筆箱號\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <Button variant=\"info\" size=\"lg\" onClick={() => saveBigData()}>儲存當前箱號</Button>\r\n                        {' '}\r\n                        <Print\r\n                            from=\"B\"\r\n                            bigData={bigData}\r\n                            show={bigData.length > 0 ? true : false}\r\n                            afterExport={() => afterExport()} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"訊息\"\r\n                type={windowType}\r\n                text={msg}\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default B_mode","import React, { Fragment } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Print from './print';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nfunction C_mode(props) {\r\n    const [bigData, setBigData] = React.useState([]);  // 最後得大資料\r\n    const [smData, setSmData] = React.useState();    // 每一箱號的資料(暫存)\r\n    const [msg, setMsg] = React.useState(); // 視窗訊息\r\n    const [windowType, setWindowType] = React.useState('info');  // 視窗類型\r\n    const [show, setShow] = React.useState(false);\r\n    const [num, setNum] = React.useState(1);  // 幾頁分頁\r\n    const [boxNumber, setBoxNumber] = React.useState();\r\n    const inputBox = React.useRef();\r\n    const fontRef = React.useRef();\r\n\r\n    function handlerInput(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            validation();\r\n            fontRef.current.focus();\r\n            inputBox.current.focus();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if ( props.curTab === 'c_mode' ) {\r\n            inputBox.current.focus();\r\n        }\r\n    }, [props.curTab]);\r\n\r\n    function playAudio() {\r\n        let x = document.getElementById(\"myAudio\");\r\n        x.play()\r\n    }\r\n\r\n    // 儲存編號到箱號陣列\r\n    function saveData() {\r\n        if (smData !== undefined) {\r\n            setSmData(pre => [...pre, { '外箱條碼': boxNumber }]);\r\n        } else {\r\n            setSmData([{ '外箱條碼': boxNumber }]);\r\n        }\r\n\r\n    }\r\n\r\n    // 驗證掃描資料\r\n    function validation() {\r\n        // 做驗證\r\n        if (boxNumber.length !== 11) {\r\n            playAudio();\r\n            setMsg(pre => '外箱條碼格式出問題！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n            inputBox.current.focus();\r\n        } else {\r\n            saveData();\r\n        }\r\n    }\r\n\r\n    // 點擊input全選\r\n    function handleFocus(event, type) {\r\n        event.target.select();\r\n    }\r\n\r\n    // 儲存到最終資料\r\n    function saveBigData() {\r\n        if (boxNumber === undefined || boxNumber === '' || boxNumber === null) {\r\n            setMsg(pre => '請輸入箱號！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        } else if (smData === undefined || smData === '') {\r\n            setMsg(pre => '請先新增資料！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        }\r\n        else {\r\n            setBigData([...bigData, { [num]: smData }]);\r\n            setNum(num => num + 1);\r\n            cleanAllInput();\r\n            setMsg(pre => '新增箱號成功！');\r\n            setWindowType(pre => 'success');\r\n            setShow(true); // 跳出alert\r\n        }\r\n\r\n    }\r\n\r\n    // 清空所有輸入\r\n    function cleanAllInput() {\r\n        setBoxNumber('');\r\n        setSmData();\r\n        inputBox.current.focus();\r\n    }\r\n\r\n    // 輸出完檔案\r\n    function afterExport() {\r\n        setBigData(pre => []);\r\n        setNum(1);\r\n        cleanAllInput();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4} >\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>外箱</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={boxNumber} onChange={(e) => setBoxNumber(e.target.value)} ref={inputBox}\r\n                                onFocus={(e) => handleFocus(e, 'Box')} aria-describedby=\"basic-addon1\" onKeyPress={handlerInput} placeholder=\"請掃描外箱條碼\" maxLength=\"20\" />\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8} style={{ marginBottom: '16px' }}>\r\n                        當前箱號有{smData !== undefined ? smData.length : 0}筆資料，{bigData !== undefined ? bigData.length : 0}筆箱號\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <Button variant=\"info\" size=\"lg\" onClick={() => saveBigData()} ref={fontRef}>儲存當前箱號</Button>\r\n                        {' '}\r\n                        <Print\r\n                            from=\"C\"\r\n                            bigData={bigData}\r\n                            show={bigData.length > 0 ? true : false}\r\n                            afterExport={() => afterExport()} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"訊息\"\r\n                type={windowType}\r\n                text={msg}\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default C_mode","import React, { Fragment } from 'react';\r\nimport ErrorSound from '../public/error.mp3';\r\nimport A_mode from './A_mode';\r\nimport B_mode from './B_mode';\r\nimport C_mode from './C_mode';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Home() {\r\n    const [key, setKey] = React.useState('a_mode');\r\n\r\n    return (\r\n        <Fragment>\r\n            <audio id=\"myAudio\">\r\n                <source src={ErrorSound} type=\"audio/mpeg\" />\r\n                Your browser does not support the audio element.\r\n            </audio>\r\n            <Container>\r\n                <Tabs className=\"homeTab\" onSelect={(k) => setKey(k)}>\r\n                    <Tab eventKey=\"a_mode\" title=\"A模式\">\r\n                        <A_mode curTab={key}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"b_mode\" title=\"B模式\">\r\n                        <B_mode curTab={key}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"c_mode\" title=\"C模式\">\r\n                        <C_mode curTab={key}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/home';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Home/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}