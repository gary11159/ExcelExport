{"version":3,"sources":["public/error.mp3","logo.svg","components/print.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Print","props","element","Button","variant","size","disabled","show","onClick","afterExport","style","cursor","undefined","bigData","map","item","data","Object","values","name","keys","key","label","value","Home","React","useState","curData","setCurData","setBigData","smData","setSmData","msg","setMsg","windowType","setWindowType","setShow","boxNumber","setBoxNumber","dataA","setDataA","dataB","setDataB","inputBox","useRef","inputA","inputB","handlerInput","event","preventDefault","validation","playAudio","document","getElementById","play","saveData","pre","a","length","current","focus","handleFocus","type","target","select","cleanAllInput","useEffect","id","src","ErrorSound","Container","Row","Col","sm","InputGroup","className","Prepend","Text","FormControl","onChange","e","ref","onFocus","aria-describedby","onKeyPress","placeholder","maxlength","marginBottom","title","text","onConfirm","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c4916c28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.b70ddfd8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst dataSet1 = [\r\n    {\r\n        A: '123',\r\n        B: '321'\r\n    },\r\n    {\r\n        A: '123',\r\n        B: '321'\r\n    }, {\r\n        A: '123',\r\n        B: '321'\r\n    }, {\r\n        A: '123',\r\n        B: '321'\r\n    }, {\r\n        A: '123',\r\n        B: '321'\r\n    },\r\n];\r\n\r\n\r\nfunction Print(props) {\r\n    return (\r\n        <ExcelFile element={<Button variant=\"warning\" size=\"lg\" disabled={!props.show} onClick={() => props.afterExport()} style={!props.show ? {cursor: 'not-allowed'} : null}>輸出Excel</Button>}>\r\n            {props.bigData !== undefined && props.bigData.map((item) => {\r\n                return (\r\n                    <ExcelSheet data={Object.values(item)[0]} name={Object.keys(item)} key={Object.keys(item)}>\r\n                        <ExcelColumn label=\"A\" value=\"A\" />\r\n                        <ExcelColumn label=\"B\" value=\"B\" />\r\n                    </ExcelSheet>\r\n                )\r\n            })}\r\n        </ExcelFile>\r\n    );\r\n}\r\n\r\nexport default Print","import React, { Fragment } from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { Button } from 'react-bootstrap';\r\nimport Print from './print';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ErrorSound from '../public/error.mp3';\r\n\r\nfunction Home() {\r\n    const [curData, setCurData] = React.useState('Box');\r\n    const [bigData, setBigData] = React.useState([]);  // 最後得大資料\r\n    const [smData, setSmData] = React.useState();    // 每一箱號的資料(暫存)\r\n    const [msg, setMsg] = React.useState(); // 視窗訊息\r\n    const [windowType, setWindowType] = React.useState('info');  // 視窗類型\r\n    const [show, setShow] = React.useState(false);\r\n    const [boxNumber, setBoxNumber] = React.useState();\r\n    const [dataA, setDataA] = React.useState();\r\n    const [dataB, setDataB] = React.useState();\r\n    const inputBox = React.useRef();\r\n    const inputA = React.useRef();\r\n    const inputB = React.useRef();\r\n\r\n    function handlerInput(event) {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            validation();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n    }, [])\r\n\r\n    function playAudio() {\r\n        let x = document.getElementById(\"myAudio\");\r\n        x.play()\r\n    }\r\n\r\n    // 儲存編號到箱號陣列\r\n    function saveData() {\r\n        if (smData !== undefined) {\r\n            setSmData(pre => [...pre, { 'A': dataA, 'B': dataB }]);\r\n        } else {\r\n            setSmData([{ 'A': dataA, 'B': dataB }]);\r\n        }\r\n\r\n    }\r\n\r\n    // 驗證掃描資料\r\n    async function validation() {\r\n        // 做驗證\r\n        if (curData === 'A') {\r\n            if (dataA.length === 13) {\r\n                inputB.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => 'A資料出問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputA.current.focus();\r\n            }\r\n        } else if (curData === 'B') {\r\n            if (dataB.length === 10) {\r\n                saveData();\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => 'B資料出問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputB.current.focus();\r\n            }\r\n        } else if (curData === 'Box') {\r\n            if (boxNumber.length === 11) {\r\n                inputA.current.focus();\r\n            } else {\r\n                playAudio();\r\n                setMsg(pre => '箱號資料出問題！');\r\n                setWindowType(pre => 'error');\r\n                setShow(true); // 跳出alert\r\n                inputBox.current.focus();\r\n            }\r\n        }\r\n        // 回傳\r\n        return false;\r\n    }\r\n\r\n    // 點擊input全選\r\n    function handleFocus(event, type) {\r\n        setCurData(pre => type);\r\n        event.target.select();\r\n    }\r\n\r\n    // 儲存到最終資料\r\n    function saveBigData() {\r\n        if (boxNumber === undefined || boxNumber === '' || boxNumber === null) {\r\n            setMsg(pre => '請輸入箱號！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        } else if (smData === undefined || smData === '') {\r\n            setMsg(pre => '請新增資料！');\r\n            setWindowType(pre => 'error');\r\n            setShow(true); // 跳出alert\r\n        }\r\n        else {\r\n            setBigData([...bigData, { [boxNumber]: smData }]);\r\n            cleanAllInput();\r\n            setMsg(pre => '新增箱號成功！');\r\n            setWindowType(pre => 'success');\r\n            setShow(true); // 跳出alert\r\n        }\r\n\r\n    }\r\n\r\n    // 清空所有輸入\r\n    function cleanAllInput() {\r\n        setBoxNumber('');\r\n        setSmData();\r\n        setDataA('');\r\n        setDataB('');\r\n        inputBox.current.focus();\r\n    }\r\n\r\n    // 輸出完檔案\r\n    function afterExport() {\r\n        setBigData(pre => []);\r\n        cleanAllInput();\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <audio id=\"myAudio\">\r\n                <source src={ErrorSound} type=\"audio/mpeg\" />\r\n                Your browser does not support the audio element.\r\n            </audio>\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4} >\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>箱號</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={boxNumber} onChange={(e) => setBoxNumber(e.target.value)} ref={inputBox}\r\n                                onFocus={(e) => handleFocus(e, 'Box')} aria-describedby=\"basic-addon1\" onKeyPress={handlerInput} placeholder=\"請輸入箱號\" maxlength=\"20\"/>\r\n                        </InputGroup>\r\n\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <InputGroup className=\"mb-3\" size=\"lg\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>輸入資料</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl value={dataA} onChange={(e) => setDataA(e.target.value)} ref={inputA} onFocus={(e) => handleFocus(e, 'A')} placeholder=\"請掃描A資料\" onKeyPress={handlerInput} maxlength=\"20\" />\r\n                            <FormControl value={dataB} onChange={(e) => setDataB(e.target.value)} ref={inputB} onFocus={(e) => handleFocus(e, 'B')} placeholder=\"請掃描B資料\" onKeyPress={handlerInput} maxlength=\"20\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8} style={{ marginBottom: '16px' }}>\r\n                        當前箱號有{smData !== undefined ? smData.length : 0}筆資料，{bigData !== undefined ? bigData.length : 0}筆箱號\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <Button variant=\"info\" size=\"lg\" onClick={() => saveBigData()}>儲存當前箱號</Button>\r\n                        {' '}\r\n                        <Print\r\n                            bigData={bigData}\r\n                            show={bigData.length > 0 ? true : false}\r\n                            afterExport={() => afterExport()} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <SweetAlert\r\n                show={show}\r\n                title=\"訊息\"\r\n                type={windowType}\r\n                text={msg}\r\n                onConfirm={() => setShow(false)}\r\n            />\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Print from './components/print';\nimport Home from './components/home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Home/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}